import React from 'react'
import styled from 'styled-components'

import {
  HeroWrapper,
  SectionWrapper,
  Typography,
  HighlightText,
  Badge,
} from '../../utils/sharedComponents'

const BadgeGrid = styled.div`
  display: flex;
  flex-wrap: wrap;
  gap: ${({ theme }) => theme.spacing(2)};
  justify-content: center;
  margin-top: ${({ theme }) => theme.spacing(3)};
`

export default function PythonIntroduction() {
  const coreFeatures = [
    {
      id: 'feature-1',
      label: 'Strukturierte Entwicklung',
      icon: 'FaFolderOpen',
      variant: 'secondary',
    },
    {
      id: 'feature-2',
      label: 'Effizienz',
      icon: 'FaBolt',
      variant: 'success',
    },
    {
      id: 'feature-3',
      label: 'Skalierbarkeit',
      icon: 'FaChartLine',
      variant: 'info',
    },
    {
      id: 'feature-4',
      label: 'AI-Unterst√ºtzung',
      icon: 'FaRobot',
      variant: 'accent',
    },
    {
      id: 'feature-5',
      label: 'Flexibilit√§t',
      icon: 'FaTools',
      variant: 'warning',
    },
  ]

  return (
    <>
      {/* Hero-Bereich */}
      <HeroWrapper gradient="depthDramatic">
        <Typography variant="h1" align="center" color="neutral.ultraLight">
          üêç Python-Projekte
        </Typography>
      </HeroWrapper>

      {/* Einleitung */}
      <SectionWrapper backgroundColor="depth.dark">
        <Typography variant="h3" align="left" color="neutral.ultraLight">
          Hier findest du <HighlightText>innovative</HighlightText> und{' '}
          <HighlightText>effiziente</HighlightText> L√∂sungen, die mit Liebe zum
          Detail und einem klaren Fokus auf Skalierbarkeit entwickelt wurden.
          Python erm√∂glicht es mir, komplexe Probleme mit klaren, innovativen
          L√∂sungen zu l√∂sen. Mein Ziel ist es, Werkzeuge zu schaffen, die
          <HighlightText> technische Exzellenz</HighlightText> und
          <HighlightText> Benutzerfreundlichkeit</HighlightText> vereinen,
          w√§hrend sie gleichzeitig Prozesse optimieren und die Kreativit√§t
          f√∂rdern.
        </Typography>
        <BadgeGrid>
          {coreFeatures.map((feature) => (
            <Badge
              key={feature.id}
              label={feature.label}
              icon={feature.icon}
              variant={feature.variant}
            />
          ))}
        </BadgeGrid>
      </SectionWrapper>
    </>
  )
}
